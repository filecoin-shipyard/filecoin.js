{
  "_comment": "This file is auto-generated by write-translations.js",
  "localized-strings": {
    "next": "Next",
    "previous": "Previous",
    "tagline": "Filecoin.js library",
    "docs": {
      "introduction": {
        "title": "Introduction"
      },
      "installing": {
        "title": "Adding Filecoin.js"
      },
      "guides-example": {
        "title": "Guides example"
      },
      "how-to-contribute": {
        "title": "How to contribute"
      },
      "development-workflow": {
        "title": "Development workflow"
      },
      "ws-vs-http": {
        "title": "WS vs HTTP"
      },
      "setup-lotus-provider": {
        "title": "Setup lotus provider"
      },
      "setup-mnemonic-provider": {
        "title": "Setup mnemonic provider"
      },
      "setup-metamask-provider": {
        "title": "Setup metamask provider"
      },
      "send-message": {
        "title": "Send message"
      },
      "sign-message": {
        "title": "Sign message"
      },
      "verify-message": {
        "title": "Verify message"
      },
      "check-if-mined": {
        "title": "Check if message is mined"
      },
      "payment-channels": {
        "title": "Payment channels"
      },
      "multisig-wallet": {
        "title": "Multisig Wallets"
      },
      "state-methods": {
        "title": "State methods"
      },
      "api/filecoin.js.httpjsonrpcconnector._constructor_": {
        "title": "HttpJsonRpcConnector.(constructor)"
      },
      "api/filecoin.js.httpjsonrpcconnector.connect": {
        "title": "HttpJsonRpcConnector.connect() method"
      },
      "api/filecoin.js.httpjsonrpcconnector.disconnect": {
        "title": "HttpJsonRpcConnector.disconnect() method"
      },
      "api/filecoin.js.httpjsonrpcconnector": {
        "title": "HttpJsonRpcConnector class"
      },
      "api/filecoin.js.httpjsonrpcconnector.on": {
        "title": "HttpJsonRpcConnector.on() method"
      },
      "api/filecoin.js.httpjsonrpcconnector.options": {
        "title": "HttpJsonRpcConnector.options property"
      },
      "api/filecoin.js.httpjsonrpcconnector.reqid": {
        "title": "HttpJsonRpcConnector.reqId property"
      },
      "api/filecoin.js.httpjsonrpcconnector.request": {
        "title": "HttpJsonRpcConnector.request() method"
      },
      "api/filecoin.js.httpjsonrpcconnector.token": {
        "title": "HttpJsonRpcConnector.token property"
      },
      "api/filecoin.js.httpjsonrpcconnector.url": {
        "title": "HttpJsonRpcConnector.url property"
      },
      "api/filecoin.js.lightwalletprovider._constructor_": {
        "title": "LightWalletProvider.(constructor)"
      },
      "api/filecoin.js.lightwalletprovider.createlightwallet": {
        "title": "LightWalletProvider.createLightWallet() method"
      },
      "api/filecoin.js.lightwalletprovider.deleteaddress": {
        "title": "LightWalletProvider.deleteAddress() method"
      },
      "api/filecoin.js.lightwalletprovider.exportprivatekey": {
        "title": "LightWalletProvider.exportPrivateKey() method"
      },
      "api/filecoin.js.lightwalletprovider.getaddresses": {
        "title": "LightWalletProvider.getAddresses() method"
      },
      "api/filecoin.js.lightwalletprovider.getdefaultaddress": {
        "title": "LightWalletProvider.getDefaultAddress() method"
      },
      "api/filecoin.js.lightwalletprovider.getsigner": {
        "title": "LightWalletProvider.getSigner() method"
      },
      "api/filecoin.js.lightwalletprovider.hasaddress": {
        "title": "LightWalletProvider.hasAddress() method"
      },
      "api/filecoin.js.lightwalletprovider.keystore": {
        "title": "LightWalletProvider.keystore property"
      },
      "api/filecoin.js.lightwalletprovider.loadlightwallet": {
        "title": "LightWalletProvider.loadLightWallet() method"
      },
      "api/filecoin.js.lightwalletprovider": {
        "title": "LightWalletProvider class"
      },
      "api/filecoin.js.lightwalletprovider.msigapproveaddsigner": {
        "title": "LightWalletProvider.msigApproveAddSigner() method"
      },
      "api/filecoin.js.lightwalletprovider.msigapproveremovesigner": {
        "title": "LightWalletProvider.msigApproveRemoveSigner() method"
      },
      "api/filecoin.js.lightwalletprovider.msigapproveswapsigner": {
        "title": "LightWalletProvider.msigApproveSwapSigner() method"
      },
      "api/filecoin.js.lightwalletprovider.msigapprovetransfer": {
        "title": "LightWalletProvider.msigApproveTransfer() method"
      },
      "api/filecoin.js.lightwalletprovider.msigapprovetransfertxhash": {
        "title": "LightWalletProvider.msigApproveTransferTxHash() method"
      },
      "api/filecoin.js.lightwalletprovider.msigcanceladdsigner": {
        "title": "LightWalletProvider.msigCancelAddSigner() method"
      },
      "api/filecoin.js.lightwalletprovider.msigcancelremovesigner": {
        "title": "LightWalletProvider.msigCancelRemoveSigner() method"
      },
      "api/filecoin.js.lightwalletprovider.msigcancelswapsigner": {
        "title": "LightWalletProvider.msigCancelSwapSigner() method"
      },
      "api/filecoin.js.lightwalletprovider.msigcanceltransfer": {
        "title": "LightWalletProvider.msigCancelTransfer() method"
      },
      "api/filecoin.js.lightwalletprovider.msigcreate": {
        "title": "LightWalletProvider.msigCreate() method"
      },
      "api/filecoin.js.lightwalletprovider.msigproposeaddsigner": {
        "title": "LightWalletProvider.msigProposeAddSigner() method"
      },
      "api/filecoin.js.lightwalletprovider.msigproposeremovesigner": {
        "title": "LightWalletProvider.msigProposeRemoveSigner() method"
      },
      "api/filecoin.js.lightwalletprovider.msigproposeswapsigner": {
        "title": "LightWalletProvider.msigProposeSwapSigner() method"
      },
      "api/filecoin.js.lightwalletprovider.msigproposetransfer": {
        "title": "LightWalletProvider.msigProposeTransfer() method"
      },
      "api/filecoin.js.lightwalletprovider.newaddress": {
        "title": "LightWalletProvider.newAddress() method"
      },
      "api/filecoin.js.lightwalletprovider.preparetosave": {
        "title": "LightWalletProvider.prepareToSave() method"
      },
      "api/filecoin.js.lightwalletprovider.recoverlightwallet": {
        "title": "LightWalletProvider.recoverLightWallet() method"
      },
      "api/filecoin.js.lightwalletprovider.sendmessage": {
        "title": "LightWalletProvider.sendMessage() method"
      },
      "api/filecoin.js.lightwalletprovider.setdefaultaddress": {
        "title": "LightWalletProvider.setDefaultAddress() method"
      },
      "api/filecoin.js.lightwalletprovider.sign": {
        "title": "LightWalletProvider.sign() method"
      },
      "api/filecoin.js.lightwalletprovider.signmessage": {
        "title": "LightWalletProvider.signMessage() method"
      },
      "api/filecoin.js.lightwalletprovider.verify": {
        "title": "LightWalletProvider.verify() method"
      },
      "api/filecoin.js.lightwalletsigner._constructor_": {
        "title": "LightWalletSigner.(constructor)"
      },
      "api/filecoin.js.lightwalletsigner": {
        "title": "LightWalletSigner class"
      },
      "api/filecoin.js.lightwalletsigner.sign": {
        "title": "LightWalletSigner.sign() method"
      },
      "api/filecoin.js.lotusclient._constructor_": {
        "title": "LotusClient.(constructor)"
      },
      "api/filecoin.js.lotusclient.auth": {
        "title": "LotusClient.auth property"
      },
      "api/filecoin.js.lotusclient.chain": {
        "title": "LotusClient.chain property"
      },
      "api/filecoin.js.lotusclient.client": {
        "title": "LotusClient.client property"
      },
      "api/filecoin.js.lotusclient.common": {
        "title": "LotusClient.common property"
      },
      "api/filecoin.js.lotusclient.conn": {
        "title": "LotusClient.conn property"
      },
      "api/filecoin.js.lotusclient.gasestimate": {
        "title": "LotusClient.gasEstimate property"
      },
      "api/filecoin.js.lotusclient": {
        "title": "LotusClient class"
      },
      "api/filecoin.js.lotusclient.miner": {
        "title": "LotusClient.miner property"
      },
      "api/filecoin.js.lotusclient.mpool": {
        "title": "LotusClient.mpool property"
      },
      "api/filecoin.js.lotusclient.msig": {
        "title": "LotusClient.msig property"
      },
      "api/filecoin.js.lotusclient.net": {
        "title": "LotusClient.net property"
      },
      "api/filecoin.js.lotusclient.paych": {
        "title": "LotusClient.paych property"
      },
      "api/filecoin.js.lotusclient.release": {
        "title": "LotusClient.release() method"
      },
      "api/filecoin.js.lotusclient.state": {
        "title": "LotusClient.state property"
      },
      "api/filecoin.js.lotusclient.sync": {
        "title": "LotusClient.sync property"
      },
      "api/filecoin.js.lotusclient.wallet": {
        "title": "LotusClient.wallet property"
      },
      "api/filecoin.js.lotuswalletprovider._constructor_": {
        "title": "LotusWalletProvider.(constructor)"
      },
      "api/filecoin.js.lotuswalletprovider.deleteaddress": {
        "title": "LotusWalletProvider.deleteAddress() method"
      },
      "api/filecoin.js.lotuswalletprovider.exportprivatekey": {
        "title": "LotusWalletProvider.exportPrivateKey() method"
      },
      "api/filecoin.js.lotuswalletprovider.getaddresses": {
        "title": "LotusWalletProvider.getAddresses() method"
      },
      "api/filecoin.js.lotuswalletprovider.getdefaultaddress": {
        "title": "LotusWalletProvider.getDefaultAddress() method"
      },
      "api/filecoin.js.lotuswalletprovider.hasaddress": {
        "title": "LotusWalletProvider.hasAddress() method"
      },
      "api/filecoin.js.lotuswalletprovider": {
        "title": "LotusWalletProvider class"
      },
      "api/filecoin.js.lotuswalletprovider.msigapproveaddsigner": {
        "title": "LotusWalletProvider.msigApproveAddSigner() method"
      },
      "api/filecoin.js.lotuswalletprovider.msigapproveremovesigner": {
        "title": "LotusWalletProvider.msigApproveRemoveSigner() method"
      },
      "api/filecoin.js.lotuswalletprovider.msigapproveswapsigner": {
        "title": "LotusWalletProvider.msigApproveSwapSigner() method"
      },
      "api/filecoin.js.lotuswalletprovider.msigapprovetransfer": {
        "title": "LotusWalletProvider.msigApproveTransfer() method"
      },
      "api/filecoin.js.lotuswalletprovider.msigapprovetransfertxhash": {
        "title": "LotusWalletProvider.msigApproveTransferTxHash() method"
      },
      "api/filecoin.js.lotuswalletprovider.msigcanceladdsigner": {
        "title": "LotusWalletProvider.msigCancelAddSigner() method"
      },
      "api/filecoin.js.lotuswalletprovider.msigcancelremovesigner": {
        "title": "LotusWalletProvider.msigCancelRemoveSigner() method"
      },
      "api/filecoin.js.lotuswalletprovider.msigcancelswapsigner": {
        "title": "LotusWalletProvider.msigCancelSwapSigner() method"
      },
      "api/filecoin.js.lotuswalletprovider.msigcanceltransfer": {
        "title": "LotusWalletProvider.msigCancelTransfer() method"
      },
      "api/filecoin.js.lotuswalletprovider.msigcreate": {
        "title": "LotusWalletProvider.msigCreate() method"
      },
      "api/filecoin.js.lotuswalletprovider.msigproposeaddsigner": {
        "title": "LotusWalletProvider.msigProposeAddSigner() method"
      },
      "api/filecoin.js.lotuswalletprovider.msigproposeremovesigner": {
        "title": "LotusWalletProvider.msigProposeRemoveSigner() method"
      },
      "api/filecoin.js.lotuswalletprovider.msigproposeswapsigner": {
        "title": "LotusWalletProvider.msigProposeSwapSigner() method"
      },
      "api/filecoin.js.lotuswalletprovider.msigproposetransfer": {
        "title": "LotusWalletProvider.msigProposeTransfer() method"
      },
      "api/filecoin.js.lotuswalletprovider.newaddress": {
        "title": "LotusWalletProvider.newAddress() method"
      },
      "api/filecoin.js.lotuswalletprovider.sendmessage": {
        "title": "LotusWalletProvider.sendMessage() method"
      },
      "api/filecoin.js.lotuswalletprovider.setdefaultaddress": {
        "title": "LotusWalletProvider.setDefaultAddress() method"
      },
      "api/filecoin.js.lotuswalletprovider.sign": {
        "title": "LotusWalletProvider.sign() method"
      },
      "api/filecoin.js.lotuswalletprovider.signmessage": {
        "title": "LotusWalletProvider.signMessage() method"
      },
      "api/filecoin.js.lotuswalletprovider.verify": {
        "title": "LotusWalletProvider.verify() method"
      },
      "api/filecoin.js.lotuswalletprovider.walletimport": {
        "title": "LotusWalletProvider.walletImport() method"
      },
      "api/filecoin.js": {
        "title": "filecoin.js package"
      },
      "api/filecoin.js.metamasksigner._constructor_": {
        "title": "MetamaskSigner.(constructor)"
      },
      "api/filecoin.js.metamasksigner.getdefaultaccount": {
        "title": "MetamaskSigner.getDefaultAccount() method"
      },
      "api/filecoin.js.metamasksigner": {
        "title": "MetamaskSigner class"
      },
      "api/filecoin.js.metamasksigner.sign": {
        "title": "MetamaskSigner.sign() method"
      },
      "api/filecoin.js.metamasksnaphelper._constructor_": {
        "title": "MetamaskSnapHelper.(constructor)"
      },
      "api/filecoin.js.metamasksnaphelper.error": {
        "title": "MetamaskSnapHelper.error property"
      },
      "api/filecoin.js.metamasksnaphelper.filecoinapi": {
        "title": "MetamaskSnapHelper.filecoinApi property"
      },
      "api/filecoin.js.metamasksnaphelper.installfilecoinsnap": {
        "title": "MetamaskSnapHelper.installFilecoinSnap() method"
      },
      "api/filecoin.js.metamasksnaphelper": {
        "title": "MetamaskSnapHelper class"
      },
      "api/filecoin.js.metamaskwalletprovider._constructor_": {
        "title": "MetamaskWalletProvider.(constructor)"
      },
      "api/filecoin.js.metamaskwalletprovider.deleteaddress": {
        "title": "MetamaskWalletProvider.deleteAddress() method"
      },
      "api/filecoin.js.metamaskwalletprovider.exportprivatekey": {
        "title": "MetamaskWalletProvider.exportPrivateKey() method"
      },
      "api/filecoin.js.metamaskwalletprovider.getaddresses": {
        "title": "MetamaskWalletProvider.getAddresses() method"
      },
      "api/filecoin.js.metamaskwalletprovider.getdefaultaddress": {
        "title": "MetamaskWalletProvider.getDefaultAddress() method"
      },
      "api/filecoin.js.metamaskwalletprovider.getsigner": {
        "title": "MetamaskWalletProvider.getSigner() method"
      },
      "api/filecoin.js.metamaskwalletprovider.hasaddress": {
        "title": "MetamaskWalletProvider.hasAddress() method"
      },
      "api/filecoin.js.metamaskwalletprovider": {
        "title": "MetamaskWalletProvider class"
      },
      "api/filecoin.js.metamaskwalletprovider.newaddress": {
        "title": "MetamaskWalletProvider.newAddress() method"
      },
      "api/filecoin.js.metamaskwalletprovider.sendmessage": {
        "title": "MetamaskWalletProvider.sendMessage() method"
      },
      "api/filecoin.js.metamaskwalletprovider.setdefaultaddress": {
        "title": "MetamaskWalletProvider.setDefaultAddress() method"
      },
      "api/filecoin.js.metamaskwalletprovider.sign": {
        "title": "MetamaskWalletProvider.sign() method"
      },
      "api/filecoin.js.metamaskwalletprovider.signmessage": {
        "title": "MetamaskWalletProvider.signMessage() method"
      },
      "api/filecoin.js.metamaskwalletprovider.verify": {
        "title": "MetamaskWalletProvider.verify() method"
      },
      "api/filecoin.js.mnemonicsigner._constructor_": {
        "title": "MnemonicSigner.(constructor)"
      },
      "api/filecoin.js.mnemonicsigner.addresses": {
        "title": "MnemonicSigner.addresses property"
      },
      "api/filecoin.js.mnemonicsigner.deleteaddress": {
        "title": "MnemonicSigner.deleteAddress() method"
      },
      "api/filecoin.js.mnemonicsigner.getaddresses": {
        "title": "MnemonicSigner.getAddresses() method"
      },
      "api/filecoin.js.mnemonicsigner.getdefaultaddress": {
        "title": "MnemonicSigner.getDefaultAddress() method"
      },
      "api/filecoin.js.mnemonicsigner.getprivatekey": {
        "title": "MnemonicSigner.getPrivateKey() method"
      },
      "api/filecoin.js.mnemonicsigner.hasaddress": {
        "title": "MnemonicSigner.hasAddress() method"
      },
      "api/filecoin.js.mnemonicsigner.initaddresses": {
        "title": "MnemonicSigner.initAddresses() method"
      },
      "api/filecoin.js.mnemonicsigner": {
        "title": "MnemonicSigner class"
      },
      "api/filecoin.js.mnemonicsigner.newaddress": {
        "title": "MnemonicSigner.newAddress() method"
      },
      "api/filecoin.js.mnemonicsigner.setdefaultaddress": {
        "title": "MnemonicSigner.setDefaultAddress() method"
      },
      "api/filecoin.js.mnemonicsigner.sign": {
        "title": "MnemonicSigner.sign() method"
      },
      "api/filecoin.js.mnemonicwalletprovider._constructor_": {
        "title": "MnemonicWalletProvider.(constructor)"
      },
      "api/filecoin.js.mnemonicwalletprovider.deleteaddress": {
        "title": "MnemonicWalletProvider.deleteAddress() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.exportprivatekey": {
        "title": "MnemonicWalletProvider.exportPrivateKey() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.getaddresses": {
        "title": "MnemonicWalletProvider.getAddresses() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.getdefaultaddress": {
        "title": "MnemonicWalletProvider.getDefaultAddress() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.getsigner": {
        "title": "MnemonicWalletProvider.getSigner() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.hasaddress": {
        "title": "MnemonicWalletProvider.hasAddress() method"
      },
      "api/filecoin.js.mnemonicwalletprovider": {
        "title": "MnemonicWalletProvider class"
      },
      "api/filecoin.js.mnemonicwalletprovider.msigapproveaddsigner": {
        "title": "MnemonicWalletProvider.msigApproveAddSigner() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.msigapproveremovesigner": {
        "title": "MnemonicWalletProvider.msigApproveRemoveSigner() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.msigapproveswapsigner": {
        "title": "MnemonicWalletProvider.msigApproveSwapSigner() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.msigapprovetransfer": {
        "title": "MnemonicWalletProvider.msigApproveTransfer() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.msigapprovetransfertxhash": {
        "title": "MnemonicWalletProvider.msigApproveTransferTxHash() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.msigcanceladdsigner": {
        "title": "MnemonicWalletProvider.msigCancelAddSigner() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.msigcancelremovesigner": {
        "title": "MnemonicWalletProvider.msigCancelRemoveSigner() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.msigcancelswapsigner": {
        "title": "MnemonicWalletProvider.msigCancelSwapSigner() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.msigcanceltransfer": {
        "title": "MnemonicWalletProvider.msigCancelTransfer() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.msigcreate": {
        "title": "MnemonicWalletProvider.msigCreate() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.msigproposeaddsigner": {
        "title": "MnemonicWalletProvider.msigProposeAddSigner() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.msigproposeremovesigner": {
        "title": "MnemonicWalletProvider.msigProposeRemoveSigner() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.msigproposeswapsigner": {
        "title": "MnemonicWalletProvider.msigProposeSwapSigner() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.msigproposetransfer": {
        "title": "MnemonicWalletProvider.msigProposeTransfer() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.newaddress": {
        "title": "MnemonicWalletProvider.newAddress() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.sendmessage": {
        "title": "MnemonicWalletProvider.sendMessage() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.setdefaultaddress": {
        "title": "MnemonicWalletProvider.setDefaultAddress() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.sign": {
        "title": "MnemonicWalletProvider.sign() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.signmessage": {
        "title": "MnemonicWalletProvider.signMessage() method"
      },
      "api/filecoin.js.mnemonicwalletprovider.verify": {
        "title": "MnemonicWalletProvider.verify() method"
      },
      "api/filecoin.js.wsjsonrpcconnector._constructor_": {
        "title": "WsJsonRpcConnector.(constructor)"
      },
      "api/filecoin.js.wsjsonrpcconnector.closesubscription": {
        "title": "WsJsonRpcConnector.closeSubscription() method"
      },
      "api/filecoin.js.wsjsonrpcconnector.connect": {
        "title": "WsJsonRpcConnector.connect() method"
      },
      "api/filecoin.js.wsjsonrpcconnector.disconnect": {
        "title": "WsJsonRpcConnector.disconnect() method"
      },
      "api/filecoin.js.wsjsonrpcconnector": {
        "title": "WsJsonRpcConnector class"
      },
      "api/filecoin.js.wsjsonrpcconnector.on": {
        "title": "WsJsonRpcConnector.on() method"
      },
      "api/filecoin.js.wsjsonrpcconnector.request": {
        "title": "WsJsonRpcConnector.request() method"
      },
      "api/filecoin.js.wsjsonrpcconnector.token": {
        "title": "WsJsonRpcConnector.token property"
      },
      "api/filecoin.js.wsjsonrpcconnector.url": {
        "title": "WsJsonRpcConnector.url property"
      },
      "api/index": {
        "title": "API Reference"
      }
    },
    "links": {
      "Documentation": "Documentation",
      "API Reference": "API Reference",
      "GitHub": "GitHub"
    },
    "categories": {
      "Getting started": "Getting started",
      "Setup Wallet Providers": "Setup Wallet Providers",
      "Using a provider": "Using a provider",
      "Extra": "Extra",
      "Contributing": "Contributing"
    }
  },
  "pages-strings": {
    "Help Translate|recruit community translators for your project": "Help Translate",
    "Edit this Doc|recruitment message asking to edit the doc source": "Edit",
    "Translate this Doc|recruitment message asking to translate the docs": "Translate"
  }
}
